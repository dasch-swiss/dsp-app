{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"DSP-APP \u2014 Generic user interface of DaSCH Service Platform NOTE: The current DSP-APP version presents the admin view only. This app is a simple user interface for the Data and Service Center for the Humanities DaSCH, which uses the DSP-API server application in the backend. It's a system for annotation and linkage of resources in arts and humanities. DSP-APP implements DSP-JS-LIB to connect with DSP-API . DSP (DaSCH Service Platform) is a software framework for storing, sharing, and working with primary resources and data in the humanities. Additionaly it's built with DSP-UI-LIB \u2014 reusable DSP specific Angular modules. Please check our DSP Release Compatibility Matrix to use this app with the correct and required versions of the dependent packages. DSP-APP is free software , released under GNU Affero General Public license. Documentation User guide \u27a1 for latest released version Developer docs \u27a1 for developers Contribution If you would like to contribute to the development of the DSP-APP alongside us, please consult the general DSP contribution guidelines . Documentation / User guidelines We built the user guidelines and developer documentation with MkDocs . Get more information in the appropriate README .","title":"Introduction"},{"location":"#dsp-app-generic-user-interface-of-dasch-service-platform","text":"NOTE: The current DSP-APP version presents the admin view only. This app is a simple user interface for the Data and Service Center for the Humanities DaSCH, which uses the DSP-API server application in the backend. It's a system for annotation and linkage of resources in arts and humanities. DSP-APP implements DSP-JS-LIB to connect with DSP-API . DSP (DaSCH Service Platform) is a software framework for storing, sharing, and working with primary resources and data in the humanities. Additionaly it's built with DSP-UI-LIB \u2014 reusable DSP specific Angular modules. Please check our DSP Release Compatibility Matrix to use this app with the correct and required versions of the dependent packages. DSP-APP is free software , released under GNU Affero General Public license.","title":"DSP-APP &mdash; Generic user interface of DaSCH Service Platform"},{"location":"#documentation","text":"","title":"Documentation"},{"location":"#user-guide","text":"\u27a1 for latest released version","title":"User guide"},{"location":"#developer-docs","text":"\u27a1 for developers","title":"Developer docs"},{"location":"#contribution","text":"If you would like to contribute to the development of the DSP-APP alongside us, please consult the general DSP contribution guidelines .","title":"Contribution"},{"location":"#documentation-user-guidelines","text":"We built the user guidelines and developer documentation with MkDocs . Get more information in the appropriate README .","title":"Documentation / User guidelines"},{"location":"contribution/","text":"How to Contribute to this Project Development server DSP-APP is built with Angular and uses NPM . You have to install the corresponding packages with npm i . Now you have to possibilites to run the application in developer mode: With a local installed DSP-API environment run ng serve or npm run start . If you want to connect to the DSP-API on our test server run ng serve --configuration=test-server or npm run start-with-test-server . Please consider which version of DSP-API is currently running on the test server (see webapi: https://api.test.dasch.swiss/version ). With this solution you will also have access to all the representation files. In both case navigate to http://0.0.0.0:4200/ . The app will automatically reload if you change any of the resource files. Code scaffolding Run ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module . Build Run npm run build to build the app. The build artifacts will be stored in the dist/ directory. Run the command npm run build-prod for a production build. Test The following tests (unit, e2e and lint) are part of the Github Actions (CI) workflow and has to be run successfully before the code can be merged into the main branch. Running unit tests Run npm run test-local to execute the unit tests via Karma on your local computer. Run npm run test-ci to execute the unit tests via Karma without a browser. It is used in the Github Actions (CI) workflow. Running end-to-end tests Run npm run test-e2e-protractor to execute the end-to-end tests via Protractor . Running code linter Run npm run lint-local to execute the lint service via ESLint . This command uses the --fix flag which fixes simple errors like redundant type if you have default value assigned. In the Github Actions (CI) workflow the linter runs as npm run lint-ci . To integrate ESLint with Visual Studio Code, do the following: Install the ESLint extension. Create a task via the Tasks: Configure Task command and select npm: lint-local . In the resulting tasks.json file, configure the problem matcher to be $eslint-stylish . Further help To get more help on the Angular CLI use ng help or go check out the Angular CLI README .","title":"How to contribute"},{"location":"contribution/#how-to-contribute-to-this-project","text":"","title":"How to Contribute to this Project"},{"location":"contribution/#development-server","text":"DSP-APP is built with Angular and uses NPM . You have to install the corresponding packages with npm i . Now you have to possibilites to run the application in developer mode: With a local installed DSP-API environment run ng serve or npm run start . If you want to connect to the DSP-API on our test server run ng serve --configuration=test-server or npm run start-with-test-server . Please consider which version of DSP-API is currently running on the test server (see webapi: https://api.test.dasch.swiss/version ). With this solution you will also have access to all the representation files. In both case navigate to http://0.0.0.0:4200/ . The app will automatically reload if you change any of the resource files.","title":"Development server"},{"location":"contribution/#code-scaffolding","text":"Run ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module .","title":"Code scaffolding"},{"location":"contribution/#build","text":"Run npm run build to build the app. The build artifacts will be stored in the dist/ directory. Run the command npm run build-prod for a production build.","title":"Build"},{"location":"contribution/#test","text":"The following tests (unit, e2e and lint) are part of the Github Actions (CI) workflow and has to be run successfully before the code can be merged into the main branch.","title":"Test"},{"location":"contribution/#running-unit-tests","text":"Run npm run test-local to execute the unit tests via Karma on your local computer. Run npm run test-ci to execute the unit tests via Karma without a browser. It is used in the Github Actions (CI) workflow.","title":"Running unit tests"},{"location":"contribution/#running-end-to-end-tests","text":"Run npm run test-e2e-protractor to execute the end-to-end tests via Protractor .","title":"Running end-to-end tests"},{"location":"contribution/#running-code-linter","text":"Run npm run lint-local to execute the lint service via ESLint . This command uses the --fix flag which fixes simple errors like redundant type if you have default value assigned. In the Github Actions (CI) workflow the linter runs as npm run lint-ci . To integrate ESLint with Visual Studio Code, do the following: Install the ESLint extension. Create a task via the Tasks: Configure Task command and select npm: lint-local . In the resulting tasks.json file, configure the problem matcher to be $eslint-stylish .","title":"Running code linter"},{"location":"contribution/#further-help","text":"To get more help on the Angular CLI use ng help or go check out the Angular CLI README .","title":"Further help"},{"location":"contribution/docs-documentation/","text":"DSP-APP Documentation This is the DSP-APP documentation, based on MkDocs and published under http://dasch-swiss.github.io/dsp-app . Contribute If you would like to add your own contributions to the docs, please read the following information regarding the file structure to ensure you follow the same structure. File structure The documentation consists of three main topics with subordinate themes: index contains all information about the DSP-APP user-guide contains the DSP-APP user guide Index = Introduction: All about login, registration and DSP APP information in general. Project = All about project administration; part of DSP-ADMIN User = All about user administration; part of DSP-ADMIN System = All about system administration; part of DSP-ADMIN Data = All about data management; part of VRE. In the current DSP-APP ADMIN version it's commented out contribution contains all information for people who wants to contribute to DSP-APP Index = How to contribute incl. link to the general DSP contribution guidelines ( https://docs.dasch.swiss/developers/dsp/contribution/ ) Release Notes = Contains the CHANGELOG file of DSP-APP Images like screenshots and so on have to be stored in assets/images . The mkdocs.yml file is present in the top-level directory of the repo and the source files are in the docs/ folder. Plugins have to be defined in requirements.txt and in the github actions workflow deploy-docs step under EXTRA_PACKAGES . Getting Started To run the documentation locally you'll need Python installed, as well as the Python package manager pip . You can check if you already have these installed by running the following commands from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) MkDocs supports Python versions 3.5, 3.6, 3.7, 3.8, and pypy3. Installing dependencies Install the required packages by running the following command: make docs-install-requirements Running the documentation locally MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the mkdocs.yml (repository's root folder) configuration file, and then start the server by running the following command: $ make docs-serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Open up http://127.0.0.1:8000/ in your browser, and you'll see the documentation start page being. In case you need to clean the project directory, run: make docs-clean To get some help about the make commands, run: make help Building the documentation To build the documentation, run: make docs-build Deploying github page On each release of DSP-APP, a github action script will build and deploy the documentation on dasch-swiss.github.io/dsp-app . Behind the scenes, MkDocs builds the documentation and uses the mkdocs-deploy-gh-pages actions script to deploy them to the gh-pages. That's it!","title":"Docs Documentation"},{"location":"contribution/docs-documentation/#dsp-app-documentation","text":"This is the DSP-APP documentation, based on MkDocs and published under http://dasch-swiss.github.io/dsp-app .","title":"DSP-APP Documentation"},{"location":"contribution/docs-documentation/#contribute","text":"If you would like to add your own contributions to the docs, please read the following information regarding the file structure to ensure you follow the same structure.","title":"Contribute"},{"location":"contribution/docs-documentation/#file-structure","text":"The documentation consists of three main topics with subordinate themes: index contains all information about the DSP-APP user-guide contains the DSP-APP user guide Index = Introduction: All about login, registration and DSP APP information in general. Project = All about project administration; part of DSP-ADMIN User = All about user administration; part of DSP-ADMIN System = All about system administration; part of DSP-ADMIN Data = All about data management; part of VRE. In the current DSP-APP ADMIN version it's commented out contribution contains all information for people who wants to contribute to DSP-APP Index = How to contribute incl. link to the general DSP contribution guidelines ( https://docs.dasch.swiss/developers/dsp/contribution/ ) Release Notes = Contains the CHANGELOG file of DSP-APP Images like screenshots and so on have to be stored in assets/images . The mkdocs.yml file is present in the top-level directory of the repo and the source files are in the docs/ folder. Plugins have to be defined in requirements.txt and in the github actions workflow deploy-docs step under EXTRA_PACKAGES .","title":"File structure"},{"location":"contribution/docs-documentation/#getting-started","text":"To run the documentation locally you'll need Python installed, as well as the Python package manager pip . You can check if you already have these installed by running the following commands from the command line: $ python --version Python 3.8.2 $ pip --version pip 20.0.2 from /usr/local/lib/python3.8/site-packages/pip (python 3.8) MkDocs supports Python versions 3.5, 3.6, 3.7, 3.8, and pypy3.","title":"Getting Started"},{"location":"contribution/docs-documentation/#installing-dependencies","text":"Install the required packages by running the following command: make docs-install-requirements","title":"Installing dependencies"},{"location":"contribution/docs-documentation/#running-the-documentation-locally","text":"MkDocs comes with a built-in dev-server that lets you preview your documentation as you work on it. Make sure you're in the same directory as the mkdocs.yml (repository's root folder) configuration file, and then start the server by running the following command: $ make docs-serve INFO - Building documentation... INFO - Cleaning site directory [I 160402 15:50:43 server:271] Serving on http://127.0.0.1:8000 [I 160402 15:50:43 handlers:58] Start watching changes [I 160402 15:50:43 handlers:60] Start detecting changes Open up http://127.0.0.1:8000/ in your browser, and you'll see the documentation start page being. In case you need to clean the project directory, run: make docs-clean To get some help about the make commands, run: make help","title":"Running the documentation locally"},{"location":"contribution/docs-documentation/#building-the-documentation","text":"To build the documentation, run: make docs-build","title":"Building the documentation"},{"location":"contribution/docs-documentation/#deploying-github-page","text":"On each release of DSP-APP, a github action script will build and deploy the documentation on dasch-swiss.github.io/dsp-app . Behind the scenes, MkDocs builds the documentation and uses the mkdocs-deploy-gh-pages actions script to deploy them to the gh-pages. That's it!","title":"Deploying github page"},{"location":"contribution/release-notes/","text":"Changelog 5.0.0 (2021-07-05) \u26a0 BREAKING CHANGES upload: add upload form for still images (DSP-1761) (#472) config: add geoname config (DSP-1672) (#473) Documentation ontology: update docs and show hint in ontology-form (DSP-1139) ( #476 ) ( 927237d ) Enhancements config: add geoname config (DSP-1672) ( #473 ) ( d4222ba ) ontology: add property to res class that is in use (DSP-1631) ( #477 ) ( b18e6ec ) ontology: change gui element for text value properties ( #478 ) ( 6af1f7e ) ontology: display description for default and existing props (DSP-1154) ( #475 ) ( 8be7e55 ) upload: add upload form for still images (DSP-1761) ( #472 ) ( 2f314a2 ) Maintenance deps: bump jdnconvertiblecalendar to v0.0.7 (DSP-1770) ( #479 ) ( b2ec64a ) 4.11.1 (2021-06-23) Documentation search: add advanced search user guide (DSP-1662) ( #470 ) ( 30edc96 ) user-guide: fix navigation links ( #468 ) ( 49c68f8 ) Maintenance fix dead links to the documentation ( #471 ) ( d7ae022 ) 4.11.0 (2021-06-22) Enhancements ontology: check if an ontology, a class or a property can be deleted (DSP-1750) ( #457 ) ( fb0c275 ) Maintenance empty landing page instead login (DSP-1756) ( #466 ) ( 32cd462 ) gh-ci: update docs deployment (DSP-1741) ( #463 ) ( 6415152 ) Documentation refactor documentation and set correct links ( #467 ) ( cbeb274 ) 4.10.1 (2021-06-15) Documentation fix dead links and replace screenshots in project ( #460 ) ( a13b8ba ) prepare documentation for docs.dasch.swiss (DSP-1721) ( #458 ) ( 09259f1 ) Maintenance analytics: add fathom ( #462 ) ( f1e0244 ) cookie-policy: reactivate the cookie policy banner (DSP-1727) ( #461 ) ( ac99fbc ) 4.10.0 (2021-06-07) Enhancements ontology: new cardinality workflow (DSP-1652) ( #455 ) ( f1d049c ) 4.9.1 (2021-05-26) Maintenance resource: improve list of properties in resource viewer ( #453 ) ( 49d9b7f ) 4.9.0 (2021-05-26) Bug Fixes disable progress bar if search results are empty (DSP-1575) ( #442 ) ( 8c67d60 ) resource: add if condition (DSP-1655) ( #448 ) ( 656da04 ) Documentation update documentation about contribution (DSP-1657) ( #449 ) ( c25280d ) Enhancements resource: display region annotations in still images (DSP-1585) ( #445 ) ( 86e75b9 ) search: specify linked resource in advanced search (DSP-1661) ( #451 ) ( 3f0d6d9 ) Maintenance deps: update packages to resolve security issues ( #450 ) ( 8e927f7 ) project: resolve regex term (DSP-1654) ( #444 ) ( 739beba ) 4.8.0 (2021-05-21) Maintenance CD/CI: automatically detect common vulnerabilities and coding errors ( #438 ) ( af02332 ) compiler: enable strict template (DSP-1403) ( #432 ) ( 583a338 ) environment: add test-server config (DSP-1650) ( #443 ) ( a56a45b ) Replace favicon and term Knora by DSP (DSP-1181 / DSP-1342) ( #441 ) ( 3b038b6 ) Enhancements ontology: new method to change gui order (DSP-1567/DSP-1646) ( #440 ) ( dfd0ce0 ) 4.7.0 (2021-05-07) Maintenance search results: disable grid view (DSP-1597) ( #435 ) ( c4726fe ) Enhancements DMP: own resource viewer (DSP-1586) ( #434 ) ( 35bd7b3 ) 4.6.0 (2021-04-27) Enhancements DMP: bring back the workspace ( #431 ) ( e8b1c8e ) 4.5.2 (2021-04-22) Bug Fixes list: list no longer displays after deletion if it was the only list among lists ( #429 ) ( b05484e ) project: bug fix in project member management (DSP-1563) ( #425 ) ( ac820dd ) Maintenance ontology: disable ontology graph view (DSP-1560) ( #427 ) ( 0a567d2 ) ontology: disable rti image class (DSP-1559) ( #430 ) ( 48c3c76 ) ontology: rename boolean prop type (DSP-1561) ( #426 ) ( 4dd23d3 ) 4.5.1 (2021-04-20) Bug Fixes ontology: bug fix in create ontology process (DSP-1558) ( #423 ) ( bbd825b ) 4.5.0 (2021-04-20) Bug Fixes users: update session the correct way (DSP-690) ( #419 ) ( 3ec049e ) Enhancements project: better error handler in case a project does not exist (DSP-1401) ( #421 ) ( d7470a0 ) 4.4.3 (2021-04-14) Bug Fixes ontology: Bug fix in ontology form ( #417 ) ( 96dc804 ) 4.4.2 (2021-04-12) Maintenance migrate to angular11: changes (DSP-1471) ( #415 ) ( 3271ece ) 4.4.1 (2021-04-08) Maintenance migrate to angular10: changes (DSP-1415) ( #412 ) ( cec564d ) 4.4.0 (2021-03-23) Bug Fixes deps: package dependency build errors (DSP-1400) ( #410 ) ( 17e0e1a ) Maintenance list-editor: new list form refactor (DSP-1392) ( #403 ) ( 8824682 ) ontology: improve ontology editor design (DSP-1376) ( #401 ) ( 6de83b8 ) project landing page: update metadata typings (DSP-1393) ( #407 ) ( b4f101b ) project metadata page: enable error handler ( #411 ) ( a4004ed ) Enhancements eslint: migrate tslint to eslint (DSP-1372) ( #394 ) ( 6ffc3b6 ) ontology: edit data model info (DSP-1208) ( #385 ) ( 86a5fb8 ) ontology: form to create and edit property (DSP-1210) ( #406 ) ( 91ebb68 ) 4.3.1 (2021-03-03) Bug Fixes project: disable error handler in metadata request (DSP-1395) ( #404 ) ( 86ebfcf ) 4.3.0 (2021-03-02) Bug Fixes ontology: set the cache earlier in case of only one ontology (DSP-1374) ( #397 ) ( c23ae61 ) Enhancements list-editor: insert a child node at a specific position (DSP-1301) ( #395 ) ( 5107200 ) ontology: separate list of ontology properties (DSP-1364) ( #391 ) ( 0f94df6 ) Maintenance deps: bump three from 0.118.3 to 0.125.0 ( #402 ) ( 5ab9c49 ) gh-ci: update release please configuration (DSP-1381) ( #399 ) ( 040df19 ) project landing page: use metadata endpoint to get data from backend (DSP-1199) ( #400 ) ( 5dde42f ) tests: script to find ignored tests ( #396 ) ( 9ca249d ) 4.2.1 (2021-02-24) Bug Fixes ontology: bug fix in list property (DSP-1368) ( #390 ) ( 2fb448e ) 4.2.0 (2021-02-22) Enhancements list-editor: add deletion functionality (DSP-1334) ( #378 ) ( 34c74a6 ) list-editor: delete list root node (DSP-1356) ( #386 ) ( 5d5eabf ) list-editor: reposition a child node amongst its siblings (DSP-1340) ( #388 ) ( 0a9be0e ) ontology: default language for property label ( #382 ) ( 97230d1 ) ontology: edit res class info (DSP-1209) ( #380 ) ( 2debd03 ) ontology: refactor list of properties in resource class (DSP-1360) ( #389 ) ( aa565b3 ) 4.1.0 (2021-02-12) Documentation init mkdocs and move documentation from DSP-DOCS into DSP-APP repo (DSP-380) ( #379 ) ( 07f5067 ) Maintenance bumps DSP-JS to 1.3.0 and DSP-UI to 1.2.1 ( #374 ) ( 7b795ee ) deps: bump socket.io from 2.3.0 to 2.4.1 ( #367 ) ( 8133d87 ) Enhancements list editor: Adds support for editing lists (DSP-741) ( #365 ) ( 5b6ee4b ) ontology: update cardinality in resource class (DSP-1266) ( #377 ) ( 5a766c1 ) 4.0.0 (2021-01-28) \u26a0 BREAKING CHANGES set up the login page as a starting page (DSP-1292) (#370) app+main: comment out the search and everything related to resources (DSP-1291) (#371) Bug Fixes dialog: Diaolog box height issue fixed ( #358 ) ( 15d1182 ) routing: bring back the route handler in main component (DSP-1303) ( #373 ) ( 8492c1a ) Maintenance update pr template (DSP-1189) ( #353 ) ( f348e70 ) update the dsp-ui and dsp-js versions to the latest ( #364 ) ( 66931f0 ) Enhancements display metadata on project landing page (DSP-1065) ( #348 ) ( 3012ef5 ) error: Server error handler (DSP-710) ( #355 ) ( d5b77bf ) new-resource-form: make visible the required prop fields (DSP-1115) ( #342 ) ( 5885b04 ) project landing page: add copy to clipboard functionality (DSP-1248) ( #368 ) ( 17bf71c ) select-resource-class: allow accented character (DSP-1241) ( #363 ) ( 8a2654b ) refactor app+main: comment out the search and everything related to resources (DSP-1291) ( #371 ) ( 50b1309 ) set up the login page as a starting page (DSP-1292) ( #370 ) ( 46dfdbb ) 3.0.0 (2020-12-18) \u26a0 BREAKING CHANGES Prepare next big release (#350) Bug Fixes header: Replace search-panel with fulltext-search ( #313 ) ( d234fa7 ) node_modules: Update dependencies ( #318 ) ( f85e4a2 ) project: Bug fix in project view when not logged-in ( #339 ) ( ce5acf1 ) workspace: Fix broken link ( #306 ) ( 52b324d ) Open external link in new tab ( #297 ) ( 99f188e ) Replaced reset buttons with cancel button ( #284 ) ( 1481018 ) Update docker environment ( #294 ) ( db6d277 ) Documentation Update README ( #292 ) ( fa72ee1 ) Enhancements Prepare next big release ( #350 ) ( 6a39180 ) header: display form link when the session is active ( #332 ) ( d609bd5 ) header+dialog: create button in the header + dialog box ( #320 ) ( 5e4890d ) PR: Add template for PRs ( #305 ) ( 1468ee1 ) Maintenance ci: Update package-name in gh actions workflow ( #352 ) ( 3d9bb13 ) Update js- and ui-lib version ( #293 ) ( 5409d9b )","title":"Release Notes"},{"location":"contribution/release-notes/#changelog","text":"","title":"Changelog"},{"location":"contribution/release-notes/#500-2021-07-05","text":"","title":"5.0.0 (2021-07-05)"},{"location":"contribution/release-notes/#breaking-changes","text":"upload: add upload form for still images (DSP-1761) (#472) config: add geoname config (DSP-1672) (#473)","title":"\u26a0 BREAKING CHANGES"},{"location":"contribution/release-notes/#documentation","text":"ontology: update docs and show hint in ontology-form (DSP-1139) ( #476 ) ( 927237d )","title":"Documentation"},{"location":"contribution/release-notes/#enhancements","text":"config: add geoname config (DSP-1672) ( #473 ) ( d4222ba ) ontology: add property to res class that is in use (DSP-1631) ( #477 ) ( b18e6ec ) ontology: change gui element for text value properties ( #478 ) ( 6af1f7e ) ontology: display description for default and existing props (DSP-1154) ( #475 ) ( 8be7e55 ) upload: add upload form for still images (DSP-1761) ( #472 ) ( 2f314a2 )","title":"Enhancements"},{"location":"contribution/release-notes/#maintenance","text":"deps: bump jdnconvertiblecalendar to v0.0.7 (DSP-1770) ( #479 ) ( b2ec64a )","title":"Maintenance"},{"location":"contribution/release-notes/#4111-2021-06-23","text":"","title":"4.11.1 (2021-06-23)"},{"location":"contribution/release-notes/#documentation_1","text":"search: add advanced search user guide (DSP-1662) ( #470 ) ( 30edc96 ) user-guide: fix navigation links ( #468 ) ( 49c68f8 )","title":"Documentation"},{"location":"contribution/release-notes/#maintenance_1","text":"fix dead links to the documentation ( #471 ) ( d7ae022 )","title":"Maintenance"},{"location":"contribution/release-notes/#4110-2021-06-22","text":"","title":"4.11.0 (2021-06-22)"},{"location":"contribution/release-notes/#enhancements_1","text":"ontology: check if an ontology, a class or a property can be deleted (DSP-1750) ( #457 ) ( fb0c275 )","title":"Enhancements"},{"location":"contribution/release-notes/#maintenance_2","text":"empty landing page instead login (DSP-1756) ( #466 ) ( 32cd462 ) gh-ci: update docs deployment (DSP-1741) ( #463 ) ( 6415152 )","title":"Maintenance"},{"location":"contribution/release-notes/#documentation_2","text":"refactor documentation and set correct links ( #467 ) ( cbeb274 )","title":"Documentation"},{"location":"contribution/release-notes/#4101-2021-06-15","text":"","title":"4.10.1 (2021-06-15)"},{"location":"contribution/release-notes/#documentation_3","text":"fix dead links and replace screenshots in project ( #460 ) ( a13b8ba ) prepare documentation for docs.dasch.swiss (DSP-1721) ( #458 ) ( 09259f1 )","title":"Documentation"},{"location":"contribution/release-notes/#maintenance_3","text":"analytics: add fathom ( #462 ) ( f1e0244 ) cookie-policy: reactivate the cookie policy banner (DSP-1727) ( #461 ) ( ac99fbc )","title":"Maintenance"},{"location":"contribution/release-notes/#4100-2021-06-07","text":"","title":"4.10.0 (2021-06-07)"},{"location":"contribution/release-notes/#enhancements_2","text":"ontology: new cardinality workflow (DSP-1652) ( #455 ) ( f1d049c )","title":"Enhancements"},{"location":"contribution/release-notes/#491-2021-05-26","text":"","title":"4.9.1 (2021-05-26)"},{"location":"contribution/release-notes/#maintenance_4","text":"resource: improve list of properties in resource viewer ( #453 ) ( 49d9b7f )","title":"Maintenance"},{"location":"contribution/release-notes/#490-2021-05-26","text":"","title":"4.9.0 (2021-05-26)"},{"location":"contribution/release-notes/#bug-fixes","text":"disable progress bar if search results are empty (DSP-1575) ( #442 ) ( 8c67d60 ) resource: add if condition (DSP-1655) ( #448 ) ( 656da04 )","title":"Bug Fixes"},{"location":"contribution/release-notes/#documentation_4","text":"update documentation about contribution (DSP-1657) ( #449 ) ( c25280d )","title":"Documentation"},{"location":"contribution/release-notes/#enhancements_3","text":"resource: display region annotations in still images (DSP-1585) ( #445 ) ( 86e75b9 ) search: specify linked resource in advanced search (DSP-1661) ( #451 ) ( 3f0d6d9 )","title":"Enhancements"},{"location":"contribution/release-notes/#maintenance_5","text":"deps: update packages to resolve security issues ( #450 ) ( 8e927f7 ) project: resolve regex term (DSP-1654) ( #444 ) ( 739beba )","title":"Maintenance"},{"location":"contribution/release-notes/#480-2021-05-21","text":"","title":"4.8.0 (2021-05-21)"},{"location":"contribution/release-notes/#maintenance_6","text":"CD/CI: automatically detect common vulnerabilities and coding errors ( #438 ) ( af02332 ) compiler: enable strict template (DSP-1403) ( #432 ) ( 583a338 ) environment: add test-server config (DSP-1650) ( #443 ) ( a56a45b ) Replace favicon and term Knora by DSP (DSP-1181 / DSP-1342) ( #441 ) ( 3b038b6 )","title":"Maintenance"},{"location":"contribution/release-notes/#enhancements_4","text":"ontology: new method to change gui order (DSP-1567/DSP-1646) ( #440 ) ( dfd0ce0 )","title":"Enhancements"},{"location":"contribution/release-notes/#470-2021-05-07","text":"","title":"4.7.0 (2021-05-07)"},{"location":"contribution/release-notes/#maintenance_7","text":"search results: disable grid view (DSP-1597) ( #435 ) ( c4726fe )","title":"Maintenance"},{"location":"contribution/release-notes/#enhancements_5","text":"DMP: own resource viewer (DSP-1586) ( #434 ) ( 35bd7b3 )","title":"Enhancements"},{"location":"contribution/release-notes/#460-2021-04-27","text":"","title":"4.6.0 (2021-04-27)"},{"location":"contribution/release-notes/#enhancements_6","text":"DMP: bring back the workspace ( #431 ) ( e8b1c8e )","title":"Enhancements"},{"location":"contribution/release-notes/#452-2021-04-22","text":"","title":"4.5.2 (2021-04-22)"},{"location":"contribution/release-notes/#bug-fixes_1","text":"list: list no longer displays after deletion if it was the only list among lists ( #429 ) ( b05484e ) project: bug fix in project member management (DSP-1563) ( #425 ) ( ac820dd )","title":"Bug Fixes"},{"location":"contribution/release-notes/#maintenance_8","text":"ontology: disable ontology graph view (DSP-1560) ( #427 ) ( 0a567d2 ) ontology: disable rti image class (DSP-1559) ( #430 ) ( 48c3c76 ) ontology: rename boolean prop type (DSP-1561) ( #426 ) ( 4dd23d3 )","title":"Maintenance"},{"location":"contribution/release-notes/#451-2021-04-20","text":"","title":"4.5.1 (2021-04-20)"},{"location":"contribution/release-notes/#bug-fixes_2","text":"ontology: bug fix in create ontology process (DSP-1558) ( #423 ) ( bbd825b )","title":"Bug Fixes"},{"location":"contribution/release-notes/#450-2021-04-20","text":"","title":"4.5.0 (2021-04-20)"},{"location":"contribution/release-notes/#bug-fixes_3","text":"users: update session the correct way (DSP-690) ( #419 ) ( 3ec049e )","title":"Bug Fixes"},{"location":"contribution/release-notes/#enhancements_7","text":"project: better error handler in case a project does not exist (DSP-1401) ( #421 ) ( d7470a0 )","title":"Enhancements"},{"location":"contribution/release-notes/#443-2021-04-14","text":"","title":"4.4.3 (2021-04-14)"},{"location":"contribution/release-notes/#bug-fixes_4","text":"ontology: Bug fix in ontology form ( #417 ) ( 96dc804 )","title":"Bug Fixes"},{"location":"contribution/release-notes/#442-2021-04-12","text":"","title":"4.4.2 (2021-04-12)"},{"location":"contribution/release-notes/#maintenance_9","text":"migrate to angular11: changes (DSP-1471) ( #415 ) ( 3271ece )","title":"Maintenance"},{"location":"contribution/release-notes/#441-2021-04-08","text":"","title":"4.4.1 (2021-04-08)"},{"location":"contribution/release-notes/#maintenance_10","text":"migrate to angular10: changes (DSP-1415) ( #412 ) ( cec564d )","title":"Maintenance"},{"location":"contribution/release-notes/#440-2021-03-23","text":"","title":"4.4.0 (2021-03-23)"},{"location":"contribution/release-notes/#bug-fixes_5","text":"deps: package dependency build errors (DSP-1400) ( #410 ) ( 17e0e1a )","title":"Bug Fixes"},{"location":"contribution/release-notes/#maintenance_11","text":"list-editor: new list form refactor (DSP-1392) ( #403 ) ( 8824682 ) ontology: improve ontology editor design (DSP-1376) ( #401 ) ( 6de83b8 ) project landing page: update metadata typings (DSP-1393) ( #407 ) ( b4f101b ) project metadata page: enable error handler ( #411 ) ( a4004ed )","title":"Maintenance"},{"location":"contribution/release-notes/#enhancements_8","text":"eslint: migrate tslint to eslint (DSP-1372) ( #394 ) ( 6ffc3b6 ) ontology: edit data model info (DSP-1208) ( #385 ) ( 86a5fb8 ) ontology: form to create and edit property (DSP-1210) ( #406 ) ( 91ebb68 )","title":"Enhancements"},{"location":"contribution/release-notes/#431-2021-03-03","text":"","title":"4.3.1 (2021-03-03)"},{"location":"contribution/release-notes/#bug-fixes_6","text":"project: disable error handler in metadata request (DSP-1395) ( #404 ) ( 86ebfcf )","title":"Bug Fixes"},{"location":"contribution/release-notes/#430-2021-03-02","text":"","title":"4.3.0 (2021-03-02)"},{"location":"contribution/release-notes/#bug-fixes_7","text":"ontology: set the cache earlier in case of only one ontology (DSP-1374) ( #397 ) ( c23ae61 )","title":"Bug Fixes"},{"location":"contribution/release-notes/#enhancements_9","text":"list-editor: insert a child node at a specific position (DSP-1301) ( #395 ) ( 5107200 ) ontology: separate list of ontology properties (DSP-1364) ( #391 ) ( 0f94df6 )","title":"Enhancements"},{"location":"contribution/release-notes/#maintenance_12","text":"deps: bump three from 0.118.3 to 0.125.0 ( #402 ) ( 5ab9c49 ) gh-ci: update release please configuration (DSP-1381) ( #399 ) ( 040df19 ) project landing page: use metadata endpoint to get data from backend (DSP-1199) ( #400 ) ( 5dde42f ) tests: script to find ignored tests ( #396 ) ( 9ca249d )","title":"Maintenance"},{"location":"contribution/release-notes/#421-2021-02-24","text":"","title":"4.2.1 (2021-02-24)"},{"location":"contribution/release-notes/#bug-fixes_8","text":"ontology: bug fix in list property (DSP-1368) ( #390 ) ( 2fb448e )","title":"Bug Fixes"},{"location":"contribution/release-notes/#420-2021-02-22","text":"","title":"4.2.0 (2021-02-22)"},{"location":"contribution/release-notes/#enhancements_10","text":"list-editor: add deletion functionality (DSP-1334) ( #378 ) ( 34c74a6 ) list-editor: delete list root node (DSP-1356) ( #386 ) ( 5d5eabf ) list-editor: reposition a child node amongst its siblings (DSP-1340) ( #388 ) ( 0a9be0e ) ontology: default language for property label ( #382 ) ( 97230d1 ) ontology: edit res class info (DSP-1209) ( #380 ) ( 2debd03 ) ontology: refactor list of properties in resource class (DSP-1360) ( #389 ) ( aa565b3 )","title":"Enhancements"},{"location":"contribution/release-notes/#410-2021-02-12","text":"","title":"4.1.0 (2021-02-12)"},{"location":"contribution/release-notes/#documentation_5","text":"init mkdocs and move documentation from DSP-DOCS into DSP-APP repo (DSP-380) ( #379 ) ( 07f5067 )","title":"Documentation"},{"location":"contribution/release-notes/#maintenance_13","text":"bumps DSP-JS to 1.3.0 and DSP-UI to 1.2.1 ( #374 ) ( 7b795ee ) deps: bump socket.io from 2.3.0 to 2.4.1 ( #367 ) ( 8133d87 )","title":"Maintenance"},{"location":"contribution/release-notes/#enhancements_11","text":"list editor: Adds support for editing lists (DSP-741) ( #365 ) ( 5b6ee4b ) ontology: update cardinality in resource class (DSP-1266) ( #377 ) ( 5a766c1 )","title":"Enhancements"},{"location":"contribution/release-notes/#400-2021-01-28","text":"","title":"4.0.0 (2021-01-28)"},{"location":"contribution/release-notes/#breaking-changes_1","text":"set up the login page as a starting page (DSP-1292) (#370) app+main: comment out the search and everything related to resources (DSP-1291) (#371)","title":"\u26a0 BREAKING CHANGES"},{"location":"contribution/release-notes/#bug-fixes_9","text":"dialog: Diaolog box height issue fixed ( #358 ) ( 15d1182 ) routing: bring back the route handler in main component (DSP-1303) ( #373 ) ( 8492c1a )","title":"Bug Fixes"},{"location":"contribution/release-notes/#maintenance_14","text":"update pr template (DSP-1189) ( #353 ) ( f348e70 ) update the dsp-ui and dsp-js versions to the latest ( #364 ) ( 66931f0 )","title":"Maintenance"},{"location":"contribution/release-notes/#enhancements_12","text":"display metadata on project landing page (DSP-1065) ( #348 ) ( 3012ef5 ) error: Server error handler (DSP-710) ( #355 ) ( d5b77bf ) new-resource-form: make visible the required prop fields (DSP-1115) ( #342 ) ( 5885b04 ) project landing page: add copy to clipboard functionality (DSP-1248) ( #368 ) ( 17bf71c ) select-resource-class: allow accented character (DSP-1241) ( #363 ) ( 8a2654b )","title":"Enhancements"},{"location":"contribution/release-notes/#refactor","text":"app+main: comment out the search and everything related to resources (DSP-1291) ( #371 ) ( 50b1309 ) set up the login page as a starting page (DSP-1292) ( #370 ) ( 46dfdbb )","title":"refactor"},{"location":"contribution/release-notes/#300-2020-12-18","text":"","title":"3.0.0 (2020-12-18)"},{"location":"contribution/release-notes/#breaking-changes_2","text":"Prepare next big release (#350)","title":"\u26a0 BREAKING CHANGES"},{"location":"contribution/release-notes/#bug-fixes_10","text":"header: Replace search-panel with fulltext-search ( #313 ) ( d234fa7 ) node_modules: Update dependencies ( #318 ) ( f85e4a2 ) project: Bug fix in project view when not logged-in ( #339 ) ( ce5acf1 ) workspace: Fix broken link ( #306 ) ( 52b324d ) Open external link in new tab ( #297 ) ( 99f188e ) Replaced reset buttons with cancel button ( #284 ) ( 1481018 ) Update docker environment ( #294 ) ( db6d277 )","title":"Bug Fixes"},{"location":"contribution/release-notes/#documentation_6","text":"Update README ( #292 ) ( fa72ee1 )","title":"Documentation"},{"location":"contribution/release-notes/#enhancements_13","text":"Prepare next big release ( #350 ) ( 6a39180 ) header: display form link when the session is active ( #332 ) ( d609bd5 ) header+dialog: create button in the header + dialog box ( #320 ) ( 5e4890d ) PR: Add template for PRs ( #305 ) ( 1468ee1 )","title":"Enhancements"},{"location":"contribution/release-notes/#maintenance_15","text":"ci: Update package-name in gh actions workflow ( #352 ) ( 3d9bb13 ) Update js- and ui-lib version ( #293 ) ( 5409d9b )","title":"Maintenance"},{"location":"user-guide/","text":"User Guide This is the documentation for the generic DSP Web Application of the Data and Service Center for the Humanities DaSCH. You can reach the app on admin.dasch.swiss . Getting started DSP-APP is an intuitive, easy to use web-based application placed on top of DSP-API to directly use its powerful data management functionalities. With this modern web application, the researchers can create their data models, search, browse, and work with their qualitative data as easily as they could with a desktop data management tool. In addition, data models and data will automatically follow accepted standards, be interoperable, findable, and re-usable. Researchers and scholars with small to medium data sets (e.g. PhD research, pilot project, or proof of concept) have access to long-term accessibility to keep their research data alive, guaranteeing longevity of the data. Login To login, click on the LOGIN button of the header (right side), a login form will appear. Fill in the form with your credentials (user name or email and password). In case of a forgotten password, please contact the DaSCH Team . Registration You can use the DSP-APP with restricted access as guest. Otherwise, you'll need a login. At the moment, you have to contact the DaSCH Team to get your login credentials. In the future (end of 2020), we will support the SWITCH edu-ID . Help For any questions or help wanted, you can go to the help page, accessible from the Help button at the top right of the page (see login screen shot ). Here, you can find links to the user guide, get more information about the DaSCH softwares, and get more support through different platform according to your requests.","title":"Introduction"},{"location":"user-guide/#user-guide","text":"This is the documentation for the generic DSP Web Application of the Data and Service Center for the Humanities DaSCH. You can reach the app on admin.dasch.swiss .","title":"User Guide"},{"location":"user-guide/#getting-started","text":"DSP-APP is an intuitive, easy to use web-based application placed on top of DSP-API to directly use its powerful data management functionalities. With this modern web application, the researchers can create their data models, search, browse, and work with their qualitative data as easily as they could with a desktop data management tool. In addition, data models and data will automatically follow accepted standards, be interoperable, findable, and re-usable. Researchers and scholars with small to medium data sets (e.g. PhD research, pilot project, or proof of concept) have access to long-term accessibility to keep their research data alive, guaranteeing longevity of the data.","title":"Getting started"},{"location":"user-guide/#login","text":"To login, click on the LOGIN button of the header (right side), a login form will appear. Fill in the form with your credentials (user name or email and password). In case of a forgotten password, please contact the DaSCH Team .","title":"Login"},{"location":"user-guide/#registration","text":"You can use the DSP-APP with restricted access as guest. Otherwise, you'll need a login. At the moment, you have to contact the DaSCH Team to get your login credentials. In the future (end of 2020), we will support the SWITCH edu-ID .","title":"Registration"},{"location":"user-guide/#help","text":"For any questions or help wanted, you can go to the help page, accessible from the Help button at the top right of the page (see login screen shot ). Here, you can find links to the user guide, get more information about the DaSCH softwares, and get more support through different platform according to your requests.","title":"Help"},{"location":"user-guide/data/","text":"Data management Once your data model is ready, you're able to add data. The DSP-APP offers several possibilities to add data, whether you are starting from scratch or importing data from another program. Start from scratch \u26a0 NOT YET IMPLEMENTED (only mockups are presented) When a project starts from scratch, you will enter and generate new data directly in the DSP-APP itself. Generating new data can be done one by one with a form or with a table-based (Excel like) tool. Upload the files, e.g., the actual audio file of an interview or images of the photographs discussed in the interview Augment the metadata In case of interview transcriptions from audio or video files, DSP-APP will offer a simple transcription tool Create new source; e.g. upload audio file of an interview. Organize data and create additional sources \u26a0 NOT YET IMPLEMENTED The workspace of the DSP-APP includes tools to connect different sources, even if they're not in the same project (linkage), to comment on a source and on their metadata fields (annotate), and to transcribe audio-visual material. These actions will generate more data and will help to find specific sources and their relations easily. It's possible to collect different sources and to store them in an individual collection. You can define more than one collection. You can share collections and invite other users to collaborate. Search and browse DSP-APP offers the possibility to the user to search in 3 different ways: full text search, advanced search and expert search (Gravsearch query). The search bar is always available in the header of each page, whether logged in or out. Full text search Full text search performs queries including one or more terms or phrases, and returns data that matches search conditions. By default, the search is performed in all projects stored in DSP. However, it is possible to filter by project using the menu \"Filter by project\" on the left side of the search bar. https://admin.dasch.swiss - Search 1: Full text search When clicking on the search bar, the search history panel is displayed. The 10 last searches are registered. It is also possible to clear the search history list ( Clear list button at the bottom of the panel). Search history list is accessible for the full text search from any webpage. Special syntax: asterisk* can be used as a wildcard symbol \"quotation marks\" searches for the whole pattern Advanced search The advanced search allows for the creation of complex queries using a graphical widget. The widget's contents are then turned into a string representing a Gravsearch (SPARQL) query to be sent to DSP-API. A query consists of the following elements: - data model selection - selection of a resource class belonging to the selected data model (optional) - specification of properties, comparison operators, and values (optional). Although selection of a resource or a property or both are optional, either a resource class has to be selected or at least one property has to be specified, otherwise the query is not considered valid and cannot be submitted. https://admin.dasch.swiss/search/advanced - Search 2: Advanced search offers many filter combinations and is a powerful search tool. Comparison Operators Depending on the value type of the chosen property, one or more of the following comparison operators can be selected: is equal to : value equality: same number, exact same string, overlap of date periods, same target resource. is not equal to : value inequality: not same number, not exact same string, no overlap of date periods, not same target resource. is greater than : value comparison: number is greater than search value, date period begins after search value. is greater than or equal to value equality / value comparison: number is equal to or greater than search value, overlap of date periods or date period begins after search value. is less than : value comparison: number is less than search value, date period ends before search value. is less than or equal to : value equality / value comparison: number is equal to or less than search value, overlap of date periods or date period ends before search value. exists : value for the given property exists. is like : search value is contained in a text using the SPARQL REGEX function (supports regular expressions). matches : text property: search value matches the text ( Lucene Query Parser Syntax ). linking property: matches the specified linked resource. Search Examples Regular Expressions (is like) The is like operator lets the user search for texts that are like the search value via the support of regular expressions In this example, all books are found whose title contains \"Narrenschiff\" followed by a space and some other characters like \"(lat.)\" or \"(dt.)\". For general information about regular expressions see this interactive tutorial . Lucene Parser Syntax (matches) Used with a text property, the matches operator lets the user search for texts that match the search value, supporting Lucene Query Parser Syntax . In this example, all persons are found whose names contain \"Ja\" and \"ob\" with a character in between (represented by the wildcard \"?\"). This search finds \"Jacob\" as well as \"Jakob\". Note the difference between regular expressions and Lucene parser syntax! Specifying a Linked Resource (matches) Used with a linking property, the matches operator lets the user search for a linked resource that matches the specified properties. In this example, the user writes a query looking for all letters that have an author that: 1. was born after January 1st 1650 2. whose family name is \"Bernoulli\" This is different from the \"is equal to\" operator that lets the user specify a certain person (selected from a list). Expert search The expert search can be more powerful than the advanced search, but requires knowing how to use the query language Gravsearch (based on SparQL and developed by the DaSCH team). With Gravsearch, expert users can build searches by combining text-related criteria with any other criteria. For example : you could search for a page in a manuscript that contains a certain element and also mentions a person, who lived in the same country as another person, who is the author of another author. https://admin.dasch.swiss/search/expert - Search 3: Expert search is a text area in which you can create Gravsearch queries. Here is the default example you can find in the app. To learn Gravsearch, go to the DSP-API documentation \u2192 Gravsearch Search results Simple list The results of the search are displayed in an organised list with a small preview. You can select one result at a time to get more information. Search result 1: Simple list of results, similar to Google's list of results. \u26a0 NOT YET IMPLEMENTED It is not possible yet to sort or order by criteria when searching with the full text search, use the advanced search or the expert search instead to get back sorted results. Grid list: Lighttable \u26a0 NOT YET IMPLEMENTED The results of the search are displayed in a grid list with a big preview. You can select one result at a time to get more information. Search result 2: A preview list where the results are presented in tiles. Table: Excel-like view \u26a0 NOT YET IMPLEMENTED The search results are displayed in a table with the option to sort them. This layout is enabled when the search has been performed with only one source type . Each column of the table corresponds to one metadata. Search result 3: An Excel-like table view to edit multiple sources at once. Do research and work on your data Once you have found the desired sources, you can (re)view them and annotate the source itself, the media file, or single metadata values. If you select more than one source, you can compare them in a side-by-side view, link them, edit them all at once, or save them in a collection. A collection is similar to a playlist in a music app or shopping basket in an online store. Display a source \u26a0 WORK IN PROGRESS The DSP-APP offers different source views for different media types. There's a viewer for still images, moving images, audio and document files. You can open them from the list of search results. Depending on the media type, DSP-APP offers different tools to work on the source. In a still image source, you're able to draw regions on the image and to annotate or transcribe this region. Usually, a still image source is used for book pages, photographs, postcards, letters etc. In time-based sources like moving image or audio document, you can mark sequences on the timeline. A transcription tool helps to annotate and to transcribe the sequence. Single source view. The source type in this example is \"Page\". DSP-APP will offer a graph view to visualize the connection of a selected source. The graph view is a powerful tool because you will find more information about the source by clicking through the nodes. Graph view of a single source. Additionally, you can work on the source directly, e.g, transcribe a moving image or a taped interview or mark regions of interest on still images and on documents. Single source fullframe view with the transcription tool at the bottom. The source type in this example is \"Video\" with a table-based sequence protocol on the right hand-side. Select more than one source \u26a0 NOT YET IMPLEMENTED Three sources are selected; what do you want to do with them? By selecting more than one source, you will be able to edit them all at once, add them to a collection, share or connect them. Or you could compare the sources (see Compare the sources ). Compare the sources \u26a0 NOT YET IMPLEMENTED You will be able to compare from two to six source objects at the same time side by side. Compare 2 to 6 sources with each other, similar to the Mirador web app. Annotate and connect your data (sources and/or metadata) \u26a0 NOT YET IMPLEMENTED A main feature of the flexible data storage that DSP-APP uses is the possibility to annotate and link sources and their metadata. An annotation can be a small note about a date like \"Not sure about the birthdate of this person. There's another date mentioned in the source XYZ\". Inside the note, it will be possible to link to another source. Links in DSP-APP are always bi-directional. If you link source A with source B, then source B knows about this connection. If you find source B, you have the connection to source A as well. Export, save or share the data \u26a0 NOT YET IMPLEMENTED Data sets and metadata extracted through a search can be exported as CSV, XML, or other predefined file formats. It will be also possible to store full text, advanced, and expert search queries to reuse them later, collect source objects in a collection similar to a playlist of a music app or a shopping basket. The share menu offers many tools to export the data, to send it to someone or to store it in an individual source collection.","title":"Data Management"},{"location":"user-guide/data/#data-management","text":"Once your data model is ready, you're able to add data. The DSP-APP offers several possibilities to add data, whether you are starting from scratch or importing data from another program.","title":"Data management"},{"location":"user-guide/data/#start-from-scratch","text":"\u26a0 NOT YET IMPLEMENTED (only mockups are presented) When a project starts from scratch, you will enter and generate new data directly in the DSP-APP itself. Generating new data can be done one by one with a form or with a table-based (Excel like) tool. Upload the files, e.g., the actual audio file of an interview or images of the photographs discussed in the interview Augment the metadata In case of interview transcriptions from audio or video files, DSP-APP will offer a simple transcription tool Create new source; e.g. upload audio file of an interview.","title":"Start from scratch"},{"location":"user-guide/data/#organize-data-and-create-additional-sources","text":"\u26a0 NOT YET IMPLEMENTED The workspace of the DSP-APP includes tools to connect different sources, even if they're not in the same project (linkage), to comment on a source and on their metadata fields (annotate), and to transcribe audio-visual material. These actions will generate more data and will help to find specific sources and their relations easily. It's possible to collect different sources and to store them in an individual collection. You can define more than one collection. You can share collections and invite other users to collaborate.","title":"Organize data and create additional sources"},{"location":"user-guide/data/#search-and-browse","text":"DSP-APP offers the possibility to the user to search in 3 different ways: full text search, advanced search and expert search (Gravsearch query). The search bar is always available in the header of each page, whether logged in or out.","title":"Search and browse"},{"location":"user-guide/data/#full-text-search","text":"Full text search performs queries including one or more terms or phrases, and returns data that matches search conditions. By default, the search is performed in all projects stored in DSP. However, it is possible to filter by project using the menu \"Filter by project\" on the left side of the search bar. https://admin.dasch.swiss - Search 1: Full text search When clicking on the search bar, the search history panel is displayed. The 10 last searches are registered. It is also possible to clear the search history list ( Clear list button at the bottom of the panel). Search history list is accessible for the full text search from any webpage. Special syntax: asterisk* can be used as a wildcard symbol \"quotation marks\" searches for the whole pattern","title":"Full text search"},{"location":"user-guide/data/#advanced-search","text":"The advanced search allows for the creation of complex queries using a graphical widget. The widget's contents are then turned into a string representing a Gravsearch (SPARQL) query to be sent to DSP-API. A query consists of the following elements: - data model selection - selection of a resource class belonging to the selected data model (optional) - specification of properties, comparison operators, and values (optional). Although selection of a resource or a property or both are optional, either a resource class has to be selected or at least one property has to be specified, otherwise the query is not considered valid and cannot be submitted. https://admin.dasch.swiss/search/advanced - Search 2: Advanced search offers many filter combinations and is a powerful search tool.","title":"Advanced search"},{"location":"user-guide/data/#comparison-operators","text":"Depending on the value type of the chosen property, one or more of the following comparison operators can be selected: is equal to : value equality: same number, exact same string, overlap of date periods, same target resource. is not equal to : value inequality: not same number, not exact same string, no overlap of date periods, not same target resource. is greater than : value comparison: number is greater than search value, date period begins after search value. is greater than or equal to value equality / value comparison: number is equal to or greater than search value, overlap of date periods or date period begins after search value. is less than : value comparison: number is less than search value, date period ends before search value. is less than or equal to : value equality / value comparison: number is equal to or less than search value, overlap of date periods or date period ends before search value. exists : value for the given property exists. is like : search value is contained in a text using the SPARQL REGEX function (supports regular expressions). matches : text property: search value matches the text ( Lucene Query Parser Syntax ). linking property: matches the specified linked resource.","title":"Comparison Operators"},{"location":"user-guide/data/#search-examples","text":"","title":"Search Examples"},{"location":"user-guide/data/#regular-expressions-is-like","text":"The is like operator lets the user search for texts that are like the search value via the support of regular expressions In this example, all books are found whose title contains \"Narrenschiff\" followed by a space and some other characters like \"(lat.)\" or \"(dt.)\". For general information about regular expressions see this interactive tutorial .","title":"Regular Expressions (is like)"},{"location":"user-guide/data/#lucene-parser-syntax-matches","text":"Used with a text property, the matches operator lets the user search for texts that match the search value, supporting Lucene Query Parser Syntax . In this example, all persons are found whose names contain \"Ja\" and \"ob\" with a character in between (represented by the wildcard \"?\"). This search finds \"Jacob\" as well as \"Jakob\". Note the difference between regular expressions and Lucene parser syntax!","title":"Lucene Parser Syntax (matches)"},{"location":"user-guide/data/#specifying-a-linked-resource-matches","text":"Used with a linking property, the matches operator lets the user search for a linked resource that matches the specified properties. In this example, the user writes a query looking for all letters that have an author that: 1. was born after January 1st 1650 2. whose family name is \"Bernoulli\" This is different from the \"is equal to\" operator that lets the user specify a certain person (selected from a list).","title":"Specifying a Linked Resource (matches)"},{"location":"user-guide/data/#expert-search","text":"The expert search can be more powerful than the advanced search, but requires knowing how to use the query language Gravsearch (based on SparQL and developed by the DaSCH team). With Gravsearch, expert users can build searches by combining text-related criteria with any other criteria. For example : you could search for a page in a manuscript that contains a certain element and also mentions a person, who lived in the same country as another person, who is the author of another author. https://admin.dasch.swiss/search/expert - Search 3: Expert search is a text area in which you can create Gravsearch queries. Here is the default example you can find in the app. To learn Gravsearch, go to the DSP-API documentation \u2192 Gravsearch","title":"Expert search"},{"location":"user-guide/data/#search-results","text":"","title":"Search results"},{"location":"user-guide/data/#simple-list","text":"The results of the search are displayed in an organised list with a small preview. You can select one result at a time to get more information. Search result 1: Simple list of results, similar to Google's list of results. \u26a0 NOT YET IMPLEMENTED It is not possible yet to sort or order by criteria when searching with the full text search, use the advanced search or the expert search instead to get back sorted results.","title":"Simple list"},{"location":"user-guide/data/#grid-list-lighttable","text":"\u26a0 NOT YET IMPLEMENTED The results of the search are displayed in a grid list with a big preview. You can select one result at a time to get more information. Search result 2: A preview list where the results are presented in tiles.","title":"Grid list: Lighttable"},{"location":"user-guide/data/#table-excel-like-view","text":"\u26a0 NOT YET IMPLEMENTED The search results are displayed in a table with the option to sort them. This layout is enabled when the search has been performed with only one source type . Each column of the table corresponds to one metadata. Search result 3: An Excel-like table view to edit multiple sources at once.","title":"Table: Excel-like view"},{"location":"user-guide/data/#do-research-and-work-on-your-data","text":"Once you have found the desired sources, you can (re)view them and annotate the source itself, the media file, or single metadata values. If you select more than one source, you can compare them in a side-by-side view, link them, edit them all at once, or save them in a collection. A collection is similar to a playlist in a music app or shopping basket in an online store.","title":"Do research and work on your data"},{"location":"user-guide/data/#display-a-source","text":"\u26a0 WORK IN PROGRESS The DSP-APP offers different source views for different media types. There's a viewer for still images, moving images, audio and document files. You can open them from the list of search results. Depending on the media type, DSP-APP offers different tools to work on the source. In a still image source, you're able to draw regions on the image and to annotate or transcribe this region. Usually, a still image source is used for book pages, photographs, postcards, letters etc. In time-based sources like moving image or audio document, you can mark sequences on the timeline. A transcription tool helps to annotate and to transcribe the sequence. Single source view. The source type in this example is \"Page\". DSP-APP will offer a graph view to visualize the connection of a selected source. The graph view is a powerful tool because you will find more information about the source by clicking through the nodes. Graph view of a single source. Additionally, you can work on the source directly, e.g, transcribe a moving image or a taped interview or mark regions of interest on still images and on documents. Single source fullframe view with the transcription tool at the bottom. The source type in this example is \"Video\" with a table-based sequence protocol on the right hand-side.","title":"Display a source"},{"location":"user-guide/data/#select-more-than-one-source","text":"\u26a0 NOT YET IMPLEMENTED Three sources are selected; what do you want to do with them? By selecting more than one source, you will be able to edit them all at once, add them to a collection, share or connect them. Or you could compare the sources (see Compare the sources ).","title":"Select more than one source"},{"location":"user-guide/data/#compare-the-sources","text":"\u26a0 NOT YET IMPLEMENTED You will be able to compare from two to six source objects at the same time side by side. Compare 2 to 6 sources with each other, similar to the Mirador web app.","title":"Compare the sources"},{"location":"user-guide/data/#annotate-and-connect-your-data-sources-andor-metadata","text":"\u26a0 NOT YET IMPLEMENTED A main feature of the flexible data storage that DSP-APP uses is the possibility to annotate and link sources and their metadata. An annotation can be a small note about a date like \"Not sure about the birthdate of this person. There's another date mentioned in the source XYZ\". Inside the note, it will be possible to link to another source. Links in DSP-APP are always bi-directional. If you link source A with source B, then source B knows about this connection. If you find source B, you have the connection to source A as well.","title":"Annotate and connect your data (sources and/or metadata)"},{"location":"user-guide/data/#export-save-or-share-the-data","text":"\u26a0 NOT YET IMPLEMENTED Data sets and metadata extracted through a search can be exported as CSV, XML, or other predefined file formats. It will be also possible to store full text, advanced, and expert search queries to reuse them later, collect source objects in a collection similar to a playlist of a music app or a shopping basket. The share menu offers many tools to export the data, to send it to someone or to store it in an individual source collection.","title":"Export, save or share the data"},{"location":"user-guide/project/","text":"Project Administration Project Once you are logged in , the dashboard displays the list of your project(s). If you are a project administrator or a system administrator, you can edit the project information or archive your project from the project menu. Archived projects are stored in a list on your dashboard and they can be \"reactivated\" at any time. https://admin.dasch.swiss/dashboard - By clicking on the project name, you get access to the full project information. System administrator can create your new research project. Essential information are required such as the project name, a short project description and institution information. Form to create a new project. As project administrator or system administrator, you can define your project, add your team members, create permission groups and as most important, define your data model (ontology) and the lists of your project. https://admin.dasch.swiss/project/0803/info - Project management functionalities; e.g. Incunabula project. Project information page is displayed without restricted content, the other functionalities are reserved for project admin and system admin. Collaboration As system admin, you can add users as project member and define their permissions roles: Who is able to edit or to see data in the project? Data includes the research sources and their metadata. Permissions can be set for the entire project or for single metadata fields. A user menu with different actions is accessible for each member of the project (link to the right side of the user line). The admin can appoint another user as project admin (or remove this permission), edit user's information, change user's password if forgotten, and remove a user. https://admin.dasch.swiss/project/0803/collaboration - Collaboration page where project admin and system admin can add new user to the team. NOTE: Permissions for project admins to add new users as project member will be implemented soon. Permission groups \u26a0 NOT YET IMPLEMENTED Project admin can create one or several permission groups in their project to set specific permissions on data to a user group. Data model The most important step in the project is the definition of the data model. DSP-APP will provide a tool for easy creation of data models. First, you have to know which data and sources you want to work with. The data model can be flexible and customizable. With DSP-APP, you can comply with the FAIR data standard, but compliance is not required to analyze your data. The questions to answer in creating your data model: What kind of data do I have in my project? What are the sources and what are their metadata? For example: You have interviewed 20 people. During these interviews that you recorded, you talked about photographs. Among all the data collected during the project, the most important are: audio-files of the interview transcribed text of conversations (or transcribe the files within the web application) photographs data about the person you interviewed location where the photograph was taken Diagram 1 shows the relationships of the data by resource classes from these experiences. Relationship of the data by resource classes Create your data model Go to your project, select the tab Data model and click on button New data model or Create your first data model (in case of a brand new project). This will open a form in a dialog box where you have to set a unique name and a label. Optional you can also add a short description of form of a comment. NOTE: There are some rules for the unique name: must be at least 3 characters long shouldn't begin with a number shouldn't begin with the letter v and a number spaces or special characters are not allowed may not contain these reserved words: knora ontology salsah shared simple standoff the unique name can't be changed afterwards The label is a combination of project's shortname and the unique name. You can replace with any other string. Data model editor | Step 1: Start by creating a new data model. Create the resource CLASSES In the data model editor, you create your resource classes by selecting a default representation type from a predefined list on the right-hand side. Click on + Create new class and select a representation type for your resource class. Data model editor | Step 2: Create all your main resource classes by selecting a predefined representation type; e.g. for a taped interview, select the representation type \"Audio / Sound / Interview\". In our example with the interview and the photographs, you drag and drop the following main resource classes from the list on the right-hand side: Audio / Sound / Interview Transcript Image / Photograph / Postcard Person Location / Place Select or create the PROPERTIES for each resource class There are two possibilites to add properties to a resource class: Create new property by selecting from list of default property types Data model editor | Step 3: Add properties to your resource class by selecting from list of default property types. Select from list of existing properties If you have already created some properties in another resource classes or in the property section you can select one of them to add it to the resource class. This way you have to define \u2014 for example \u2014 a \"Title\" property only once. Data model editor | Step 3: Add properties to your resource class by selecting from list of already existing properties In both cases it will open the property form where you have to define a label and optional a comment. If you have selected an existing property, you can also change the label and comment. Be careful in this case, because it can have an effect on other resource classes that use the same property! The property type can't be changed here. Depending on the property type you have to set additional attributes, e.g. in a resource link property you have to select a resource class to which the property will point to. Similar in case of a list property where you have to select the corresponding list. In both cases a the linked resource class or the list should already exist. Data model editor | Step 4: Define property's label and comment and set the cardinality corresponding to the resource class. For each property in a resource class you can define some rules. For example you can define if one of the property can have multiple values or if a property is a mandatory ( requiered ) field. After adding more than one property to a resource class you can change the displayed order by drag'n'drop the properties in the list.","title":"Project Administration"},{"location":"user-guide/project/#project-administration","text":"","title":"Project Administration"},{"location":"user-guide/project/#project","text":"Once you are logged in , the dashboard displays the list of your project(s). If you are a project administrator or a system administrator, you can edit the project information or archive your project from the project menu. Archived projects are stored in a list on your dashboard and they can be \"reactivated\" at any time. https://admin.dasch.swiss/dashboard - By clicking on the project name, you get access to the full project information. System administrator can create your new research project. Essential information are required such as the project name, a short project description and institution information. Form to create a new project. As project administrator or system administrator, you can define your project, add your team members, create permission groups and as most important, define your data model (ontology) and the lists of your project. https://admin.dasch.swiss/project/0803/info - Project management functionalities; e.g. Incunabula project. Project information page is displayed without restricted content, the other functionalities are reserved for project admin and system admin.","title":"Project"},{"location":"user-guide/project/#collaboration","text":"As system admin, you can add users as project member and define their permissions roles: Who is able to edit or to see data in the project? Data includes the research sources and their metadata. Permissions can be set for the entire project or for single metadata fields. A user menu with different actions is accessible for each member of the project (link to the right side of the user line). The admin can appoint another user as project admin (or remove this permission), edit user's information, change user's password if forgotten, and remove a user. https://admin.dasch.swiss/project/0803/collaboration - Collaboration page where project admin and system admin can add new user to the team. NOTE: Permissions for project admins to add new users as project member will be implemented soon.","title":"Collaboration"},{"location":"user-guide/project/#permission-groups","text":"\u26a0 NOT YET IMPLEMENTED Project admin can create one or several permission groups in their project to set specific permissions on data to a user group.","title":"Permission groups"},{"location":"user-guide/project/#data-model","text":"The most important step in the project is the definition of the data model. DSP-APP will provide a tool for easy creation of data models. First, you have to know which data and sources you want to work with. The data model can be flexible and customizable. With DSP-APP, you can comply with the FAIR data standard, but compliance is not required to analyze your data. The questions to answer in creating your data model: What kind of data do I have in my project? What are the sources and what are their metadata? For example: You have interviewed 20 people. During these interviews that you recorded, you talked about photographs. Among all the data collected during the project, the most important are: audio-files of the interview transcribed text of conversations (or transcribe the files within the web application) photographs data about the person you interviewed location where the photograph was taken Diagram 1 shows the relationships of the data by resource classes from these experiences. Relationship of the data by resource classes","title":"Data model"},{"location":"user-guide/project/#create-your-data-model","text":"Go to your project, select the tab Data model and click on button New data model or Create your first data model (in case of a brand new project). This will open a form in a dialog box where you have to set a unique name and a label. Optional you can also add a short description of form of a comment. NOTE: There are some rules for the unique name: must be at least 3 characters long shouldn't begin with a number shouldn't begin with the letter v and a number spaces or special characters are not allowed may not contain these reserved words: knora ontology salsah shared simple standoff the unique name can't be changed afterwards The label is a combination of project's shortname and the unique name. You can replace with any other string. Data model editor | Step 1: Start by creating a new data model.","title":"Create your data model"},{"location":"user-guide/project/#create-the-resource-classes","text":"In the data model editor, you create your resource classes by selecting a default representation type from a predefined list on the right-hand side. Click on + Create new class and select a representation type for your resource class. Data model editor | Step 2: Create all your main resource classes by selecting a predefined representation type; e.g. for a taped interview, select the representation type \"Audio / Sound / Interview\". In our example with the interview and the photographs, you drag and drop the following main resource classes from the list on the right-hand side: Audio / Sound / Interview Transcript Image / Photograph / Postcard Person Location / Place","title":"Create the resource CLASSES"},{"location":"user-guide/project/#select-or-create-the-properties-for-each-resource-class","text":"There are two possibilites to add properties to a resource class:","title":"Select or create the PROPERTIES for each resource class"},{"location":"user-guide/project/#create-new-property-by-selecting-from-list-of-default-property-types","text":"Data model editor | Step 3: Add properties to your resource class by selecting from list of default property types.","title":"Create new property by selecting from list of default property types"},{"location":"user-guide/project/#select-from-list-of-existing-properties","text":"If you have already created some properties in another resource classes or in the property section you can select one of them to add it to the resource class. This way you have to define \u2014 for example \u2014 a \"Title\" property only once. Data model editor | Step 3: Add properties to your resource class by selecting from list of already existing properties In both cases it will open the property form where you have to define a label and optional a comment. If you have selected an existing property, you can also change the label and comment. Be careful in this case, because it can have an effect on other resource classes that use the same property! The property type can't be changed here. Depending on the property type you have to set additional attributes, e.g. in a resource link property you have to select a resource class to which the property will point to. Similar in case of a list property where you have to select the corresponding list. In both cases a the linked resource class or the list should already exist. Data model editor | Step 4: Define property's label and comment and set the cardinality corresponding to the resource class. For each property in a resource class you can define some rules. For example you can define if one of the property can have multiple values or if a property is a mandatory ( requiered ) field. After adding more than one property to a resource class you can change the displayed order by drag'n'drop the properties in the list.","title":"Select from list of existing properties"},{"location":"user-guide/publication/","text":"Publication \u26a0 NOT YET IMPLEMENTED","title":"Publication"},{"location":"user-guide/publication/#publication","text":"\u26a0 NOT YET IMPLEMENTED","title":"Publication"},{"location":"user-guide/system/","text":"System Administration \u26a0 Only for System administrator System administrators can get an overview of all projects and all users stored in DSP. System administration part is accessible from the user menu in the header. All projects System admin gets the list of all activated projects as well as archived projects. It is possible to create a new research project, the required information must be filled in. For each project, the system admin has the possibility to edit the project information and archive the project. Overview of all activated projects, the list of archived projects is displayed below. All users System admin gets the list of all activated and suspended users registered in DSP. New users can be created from this page only (button \"Create new\"). Overview of all users where the system admin has access to several actions. For each user, the system admin has access to several actions: Add as system admin or Remove as system admin : add or remove the user role of system admin Edit user : edit the user information (e.g. first name, last name, default language) Change user's password : the system admin can update the user's password if the user has forgotten it, the system admin must enter his password first (\u26a0 a reset password functionality will be implemented in a later version on the login page) Manage project membership : the system admin can assign the selected user to one or several project, or remove the user from a specific project Suspend user : the user is deactivated and has no more access to DSP-APP. The system admin can reactivate it at any time.","title":"System Administration"},{"location":"user-guide/system/#system-administration","text":"\u26a0 Only for System administrator System administrators can get an overview of all projects and all users stored in DSP. System administration part is accessible from the user menu in the header.","title":"System Administration"},{"location":"user-guide/system/#all-projects","text":"System admin gets the list of all activated projects as well as archived projects. It is possible to create a new research project, the required information must be filled in. For each project, the system admin has the possibility to edit the project information and archive the project. Overview of all activated projects, the list of archived projects is displayed below.","title":"All projects"},{"location":"user-guide/system/#all-users","text":"System admin gets the list of all activated and suspended users registered in DSP. New users can be created from this page only (button \"Create new\"). Overview of all users where the system admin has access to several actions. For each user, the system admin has access to several actions: Add as system admin or Remove as system admin : add or remove the user role of system admin Edit user : edit the user information (e.g. first name, last name, default language) Change user's password : the system admin can update the user's password if the user has forgotten it, the system admin must enter his password first (\u26a0 a reset password functionality will be implemented in a later version on the login page) Manage project membership : the system admin can assign the selected user to one or several project, or remove the user from a specific project Suspend user : the user is deactivated and has no more access to DSP-APP. The system admin can reactivate it at any time.","title":"All users"},{"location":"user-guide/user/","text":"User Profile https://admin.dasch.swiss/dashboard - Get access to your user profile, collections and account from the main user menu. Your user profile and projects To change your personal information as well as your default language used by the interface, you can edit your profile clicking Edit . Currently, the avatar image comes from gravatar.com (go on their website to register if you want your customized user photo). https://admin.dasch.swiss/projects - Overview of your user profile and your projects. The list of your projects is accessible, click on one project to get more information about it. As project admin, you can also edit or archive your projects, and as system admin, you can additionally create new project on this page. Edit your user profile. The username, the email address and the admin rules are not editable. Your collections \u26a0 NOT YET IMPLEMENTED You will be able to store collections of sources or specific searches to work with them later or share them with collaborators. Your account As a matter of security, it is strongly recommended to update your password at least once a year. In your account page, you can update your password. https://admin.dasch.swiss/account - Update your password and deactivate your user account. \u26a0 You can delete (deactivate) your own user account. Only a system administrator will be able to reactivate it.","title":"User Profile"},{"location":"user-guide/user/#user-profile","text":"https://admin.dasch.swiss/dashboard - Get access to your user profile, collections and account from the main user menu.","title":"User Profile"},{"location":"user-guide/user/#your-user-profile-and-projects","text":"To change your personal information as well as your default language used by the interface, you can edit your profile clicking Edit . Currently, the avatar image comes from gravatar.com (go on their website to register if you want your customized user photo). https://admin.dasch.swiss/projects - Overview of your user profile and your projects. The list of your projects is accessible, click on one project to get more information about it. As project admin, you can also edit or archive your projects, and as system admin, you can additionally create new project on this page. Edit your user profile. The username, the email address and the admin rules are not editable.","title":"Your user profile and projects"},{"location":"user-guide/user/#your-collections","text":"\u26a0 NOT YET IMPLEMENTED You will be able to store collections of sources or specific searches to work with them later or share them with collaborators.","title":"Your collections"},{"location":"user-guide/user/#your-account","text":"As a matter of security, it is strongly recommended to update your password at least once a year. In your account page, you can update your password. https://admin.dasch.swiss/account - Update your password and deactivate your user account. \u26a0 You can delete (deactivate) your own user account. Only a system administrator will be able to reactivate it.","title":"Your account"}]}