name: CI

on:
  push:
  release:
    types: [published]

jobs:
  build-test:
    name: Build and Test
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [12.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      - name: Install dependencies
        run: npm install
      - name: Build app in prod mode
        run: npm run build-prod
      - name: Run unit tests
        run: npm run test-ci
      - name: Run e2e tests
        run: |
          npm run webdriver-update
          npm run test-e2e-protractor

  update_release_draft:
    name: Update next release draft
    needs: build-test
    runs-on: ubuntu-latest
    # Drafts your next Release notes as Pull Requests are merged into "main" branch
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: release-drafter/release-drafter@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  # publish only on release
  publish:
    name: Publish to Dockerhub
    needs: build-test
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && startsWith(github.ref, 'refs/tags')
    steps:
      - name: Checkout source
        uses: actions/checkout@v1
        with:
          fetch-depth: 50
      - name: Get previous tag
        id: previoustag
        uses: "WyriHaximus/github-action-get-previous-tag@1.0.0"
      - name: Update version in package.json
        run: npm version ${{steps.previoustag.outputs.tag}} --git-tag-version=false --commit-hooks=false
      - name: Update CHANGELOG
        uses: lakto/gren-changelog-action@v0.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          options: '--override'
      - name: Attach CHANGELOG to release assets
        uses: svenstaro/upload-release-action@v2
        with:
          repo_token: ${{ secrets.GH_TOKEN }}
          file: CHANGELOG.md
          tag: ${{ github.ref }}
          overwrite: true
      - name: Build and publish image
        run: |
          echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login -u ${{ secrets.DOCKER_USER }} --password-stdin
          make publish-dsp-app-image
